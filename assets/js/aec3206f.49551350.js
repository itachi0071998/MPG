(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{116:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return p}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),m=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=m(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=m(a),b=n,p=u["".concat(i,".").concat(b)]||u[b]||d[b]||o;return a?r.a.createElement(p,s(s({ref:t},c),{},{components:a})):r.a.createElement(p,s({ref:t},c))}));function p(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"},117:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}},118:function(e,t,a){"use strict";var n=a(0),r=a(119);t.a=function(){const e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},119:function(e,t,a){"use strict";var n=a(0);const r=Object(n.createContext)(void 0);t.a=r},120:function(e,t,a){"use strict";var n=a(0),r=a.n(n),o=a(118),i=a(117),s=a(56),l=a.n(s);const c=37,m=39;t.a=function(e){const{lazy:t,block:a,defaultValue:s,values:u,groupId:d,className:b}=e,{tabGroupChoices:p,setTabGroupChoices:h}=Object(o.a)(),[g,v]=Object(n.useState)(s),w=n.Children.toArray(e.children),f=[];if(null!=d){const e=p[d];null!=e&&e!==g&&u.some((t=>t.value===e))&&v(e)}const y=e=>{const t=e.target,a=f.indexOf(t),n=w[a].props.value;v(n),null!=d&&(h(d,n),setTimeout((()=>{(function(e){const{top:t,left:a,bottom:n,right:r}=e.getBoundingClientRect(),{innerHeight:o,innerWidth:i}=window;return t>=0&&r<=i&&n<=o&&a>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l.a.tabItemActive),setTimeout((()=>t.classList.remove(l.a.tabItemActive)),2e3))}),150))},O=e=>{var t;let a;switch(e.keyCode){case m:{const t=f.indexOf(e.target)+1;a=f[t]||f[0];break}case c:{const t=f.indexOf(e.target)-1;a=f[t]||f[f.length-1];break}}null===(t=a)||void 0===t||t.focus()};return r.a.createElement("div",{className:"tabs-container"},r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":a},b)},u.map((({value:e,label:t})=>r.a.createElement("li",{role:"tab",tabIndex:g===e?0:-1,"aria-selected":g===e,className:Object(i.a)("tabs__item",l.a.tabItem,{"tabs__item--active":g===e}),key:e,ref:e=>f.push(e),onKeyDown:O,onFocus:y,onClick:y},t)))),t?Object(n.cloneElement)(w.filter((e=>e.props.value===g))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},w.map(((e,t)=>Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==g})))))}},121:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function({children:e,hidden:t,className:a}){return r.a.createElement("div",{role:"tabpanel",hidden:t,className:a},e)}},122:function(e,t,a){"use strict";var n=a(0),r=a.n(n);class o extends n.Component{constructor(){super(),this.state={showText:"none",show:"Show More"}}showText(){}render(){return r.a.createElement("div",{className:(this.props.id,"")},r.a.createElement("div",{className:"text-center\tpy-5 mb-3 lg:mx-52"},r.a.createElement("div",{className:"m-0 lg:m-auto text-left"},r.a.createElement("div",{className:this.props.id?"lg:flex  lg:flex-row":"lg:flex  lg:flex-row-reverse"},r.a.createElement("div",{className:""},r.a.createElement("div",{className:"p-5 md:p-24 lg:p-5"},r.a.createElement("img",{src:this.props.imgUrl,alt:this.props.title}))),r.a.createElement("div",{className:" text-center lg:text-left flex justify-center align-center flex-col "},r.a.createElement("div",{className:"mt-3 p-16 py-18"},r.a.createElement("h1",{className:"font-medium  text-2xl lg:text-4xl pb-5 align-middle"},this.props.title),r.a.createElement("span",{className:" align-middle mb-0 text-lg"},this.props.description),r.a.createElement("span",{className:" align-middle mb-0 text-lg mt-0",style:{display:this.state.showText}},r.a.createElement("br",null),this.props.more),r.a.createElement("br",null),r.a.createElement("span",{className:"text-gray-500 cursor-pointer hover:text-gray-700",onClick:()=>{"none"==this.state.showText?this.setState({showText:"block",show:"Show Less"}):this.setState({showText:"none",show:"Show More"}),console.log(this.state.showText)}},this.state.show)))))))}}t.a=o},123:function(e,t,a){"use strict";var n=a(0),r=a.n(n);class o extends n.Component{render(){return r.a.createElement("div",{className:"border-8 border-blue-600"},r.a.createElement("div",{className:this.props.link?"h-2 bg-blue-600":"none"}),r.a.createElement("div",{className:this.props.link?"p-5 font-semibold bg-blue-900 rounded-lg rounded-t-none text-white":"p-2 font-semibold bg-gray-800 rounded-md text-white"},r.a.createElement("div",{className:"flex"},r.a.createElement("div",{className:"text-lg"},r.a.createElement("a",{href:this.props.url,className:"hover:no-underline hover:text-blue-400 text-white"},this.props.title)),r.a.createElement("svg",{className:"text-gray-300 h-5 w-5 ml-1 mt-2",fill:"currentColor",viewBox:"0 0 20 20"},r.a.createElement("path",{d:"M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z"}),r.a.createElement("path",{d:"M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z"}))),r.a.createElement("div",{className:"text-lg text-gray-400 pb-2"},this.props.titles),r.a.createElement("div",{className:"text-sm text-gray-300"},this.props.description)))}}t.a=o},124:function(e,t,a){"use strict";a.d(t,"a",(function(){return o}));var n=a(0),r=a.n(n);a(122);function o(e){var t;t=e.resource?"RESOURCES":"QUESTION";const a=e.list;return a?r.a.createElement("div",null,r.a.createElement("div",{className:"flex flex-col mt-2 min-w-full rounded-lg"},r.a.createElement("table",{className:e.resource?"min-w-full table table-auto rounded-md bg-purple-800 border-none":"min-w-full table table-auto rounded-md bg-yellow-800 border-none"},r.a.createElement("thead",null,r.a.createElement("tr",{className:"border-none"},r.a.createElement("th",{className:e.resource?"text-left pl-5 font-normal border-none text-purple-200":"text-left pl-5 font-normal border-none text-yellow-200"},t))),a.map(((e,t)=>r.a.createElement("tbody",{id:t,className:"bg-gray-900 "},r.a.createElement("tr",{className:"border-none"},r.a.createElement("td",{className:"pl-10 border-none border-b font-semibold",colSpan:2},r.a.createElement("a",{href:e.link,className:"text-blue-300 hover:text-blue-500"},e.name)),r.a.createElement("td",{className:"pl-5 border-none border-b"},r.a.createElement("div",{className:"text-gray-300"},e.desc))))))))):r.a.createElement("div",null)}},98:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return m})),a.d(t,"toc",(function(){return u})),a.d(t,"default",(function(){return b}));var n=a(3),r=a(7),o=(a(0),a(116)),i=(a(123),a(124)),s=a(120),l=a(121),c={id:"sorting",title:"Searching and Sorting",sidebar_label:"Searching and Sorting"},m={unversionedId:"sorting",id:"sorting",isDocsHomePage:!1,title:"Searching and Sorting",description:"Binary Search",source:"@site/docs/sorting.mdx",slug:"/sorting",permalink:"/docs/sorting",version:"current",sidebar_label:"Searching and Sorting",sidebar:"comp",previous:{title:"Strings",permalink:"/docs/strings"},next:{title:"Recursion and Linked List",permalink:"/docs/recursion"}},u=[{value:"Binary Search",id:"binary-search",children:[]},{value:"Lower Bound and Upper Bound concepts",id:"lower-bound-and-upper-bound-concepts",children:[]},{value:"Sorting",id:"sorting",children:[{value:"Merge Sort",id:"merge-sort",children:[]},{value:"Quick Sort",id:"quick-sort",children:[]},{value:"Counting Sort",id:"counting-sort",children:[]},{value:"Radix Sort",id:"radix-sort",children:[]},{value:"Bubble Sort",id:"bubble-sort",children:[]},{value:"Selection Sort",id:"selection-sort",children:[]}]},{value:"Declaring your own custom comparison function for sorting using STL",id:"declaring-your-own-custom-comparison-function-for-sorting-using-stl",children:[]}],d={toc:u};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"binary-search"},"Binary Search"),Object(o.b)("p",null,"Binary Search, give some respect, it is one of the underdogs algorithm that is about to become one of your favourites, everyone who knows a little amount of coding knows this algorithm but fails to understand the potential of it, here you will unlock the potential of binary search for yourself but only if you read completely and understand thoroughly."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Go through the step1 to step5 of binary search lessons of the codeforces article to learn in depth about the use cases of binary search outside of the box"))),Object(o.b)(l.a,{value:"resource",mdxType:"TabItem"},Object(o.b)(i.a,{resource:"true",list:[{name:"Code Forces",link:"https://codeforces.com/edu/course/2/lesson/6"}],mdxType:"Question"})),Object(o.b)("div",{className:"admonition admonition-important alert alert--info"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"The main theorem in this topcoder article is a gem that is hard to find, read it and own it"),Object(o.b)("p",{parentName:"div"},Object(o.b)("a",{parentName:"p",href:"https://www.topcoder.com/community/competitive-programming/tutorials/binary-search"},"Link")))),Object(o.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Learn to identify the pattern of questions and scenarios that can be solved by a particular algorithm or data structure, in this case binary search. Many of the binary search questions at first look like a DP question, but if you know the pattern of questions and scenarios where you can apply binary search you won\u2019t have a hard time seeing that instead of wasting time on DP, you can easily solve the question by applying binary search. The same goes for other data structures and algorithms."))),Object(o.b)("h2",{id:"lower-bound-and-upper-bound-concepts"},"Lower Bound and Upper Bound concepts"),Object(o.b)("p",null,"In C++, using the STL you can easily apply binary search to find the lower bound and upper bound of an element in a container. So what is lower bound and upper bound, you ask, don\u2019t ask just read on."),Object(o.b)(l.a,{value:"resource",mdxType:"TabItem"},Object(o.b)(i.a,{resource:"true",list:[{name:"Binary Search Functions In C Stl Binary_Search Lower_Bound And Upper_Bound",link:"https://www.geeksforgeeks.org/binary-search-functions-in-c-stl-binary_search-lower_bound-and-upper_bound/"}],mdxType:"Question"})),Object(o.b)("br",null),Object(o.b)(s.a,{defaultValue:"easy",values:[{label:"Easy",value:"easy"},{label:"Medium",value:"medium"},{label:"Hard",value:"hard"}],mdxType:"Tabs"},Object(o.b)(l.a,{value:"easy",mdxType:"TabItem"},Object(o.b)(i.a,{list:[{name:"Square Root Of Integer",link:"https://www.interviewbit.com/problems/square-root-of-integer/"}],mdxType:"Question"})),Object(o.b)(l.a,{value:"medium",mdxType:"TabItem"},Object(o.b)(i.a,{list:[{name:"Matrix Median",link:"https://www.interviewbit.com/problems/matrix-median/"},{name:"Eko",link:"https://www.spoj.com/problems/EKO/"},{name:"Aggrcow",link:"https://www.spoj.com/problems/AGGRCOW/"},{name:"Search In Rotated Sorted Array",link:"https://leetcode.com/problems/search-in-rotated-sorted-array/"}],mdxType:"Question"})),Object(o.b)(l.a,{value:"hard",mdxType:"TabItem"},Object(o.b)(i.a,{list:[{name:"Painters Partition Problem",link:"https://www.interviewbit.com/problems/painters-partition-problem/"},{name:"Simple Queries",link:"https://www.interviewbit.com/problems/simple-queries/"},{name:"Subsums",link:"https://www.spoj.com/problems/SUBSUMS/"},{name:"Prata",link:"https://www.spoj.com/problems/PRATA/"},{name:"Weighted Job Scheduling Log N Time",link:"https://www.geeksforgeeks.org/weighted-job-scheduling-log-n-time/"}],mdxType:"Question"}))),Object(o.b)("br",null),Object(o.b)("h2",{id:"sorting"},"Sorting"),Object(o.b)("p",null,"Keeping the items of an array or vector organised has many advantages, one being you get to apply binary search, but there is a catch, the catch is your sorting can become disadvantageous if it takes too much time, luckily there are a few sorting algorithms that runs in O(nlogn) while there are few which run in O(n) as well, so read on to find out about these different sorting algorithms."),Object(o.b)("div",{className:"admonition admonition-important alert alert--info"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Remember that sorting algorithms that run in O(n*n) time is not entirely useless, for very small \u2018n\u2019, these algorithms are preferred as they don\u2019t  blow up and are also easier to write. However, C++ STL has got you covered you don\u2019t have to write the sorting algorithm just use the internal library method which will sort for you in O(nlogn)"))),Object(o.b)("h3",{id:"merge-sort"},"Merge Sort"),Object(o.b)("p",null,"Merge Sort algorithm will not just teach you how to sort but you will also learn the application of another fundamental concept of Divide and Conquer. It has a dependable time complexity of O(nlogn), but can you prove it ? No you cannot, not until you have learnt the algorithm, so what are you waiting for, jump into some  action and start reading."),Object(o.b)(l.a,{value:"resource",mdxType:"TabItem"},Object(o.b)(i.a,{resource:"true",list:[{name:"Merge Sort",link:"https://www.hackerearth.com/practice/algorithms/sorting/merge-sort/tutorial"}],mdxType:"Question"})),Object(o.b)("h3",{id:"quick-sort"},"Quick Sort"),Object(o.b)("p",null,"As an alternative to merge sorting is quick sort, the algorithm is quite unique and surely worth your efforts. Like merge sort it also applies Divide and Conquer, but unlike merge sort whose worst case time complexity is O(nlogn) , quick sort has a worst case time complexity of  O(n*n), but wait it's only a rare case and mostly it\u2019s time complexity is O(nlogn). I am sure you must be curious how can this be, you can dwell on it after you have read the algorithm, so go on read ahead.."),Object(o.b)(l.a,{value:"resource",mdxType:"TabItem"},Object(o.b)(i.a,{resource:"true",list:[{name:"Quick Sort",link:"https://www.hackerearth.com/practice/algorithms/sorting/quick-sort/tutorial"}],mdxType:"Question"})),Object(o.b)("h3",{id:"counting-sort"},"Counting Sort"),Object(o.b)(l.a,{value:"resource",mdxType:"TabItem"},Object(o.b)(i.a,{resource:"true",list:[{name:"Counting Sort",link:"https://www.hackerearth.com/practice/algorithms/sorting/counting-sort/tutorial"}],mdxType:"Question"})),Object(o.b)("h3",{id:"radix-sort"},"Radix Sort"),Object(o.b)(l.a,{value:"resource",mdxType:"TabItem"},Object(o.b)(i.a,{resource:"true",list:[{name:"Radix Sort",link:"https://www.hackerearth.com/practice/algorithms/sorting/radix-sort/tutorial"}],mdxType:"Question"})),Object(o.b)("p",null,"Now that you have learnt about the faster sorting algorithms, you will be able to appreciate the simplicity of the slower sorting algorithms, and have an apprehension of all the algorithms you never know which one might come in handy. So go ahead and read the O(n*n) sorting algorithms"),Object(o.b)("h3",{id:"bubble-sort"},"Bubble Sort"),Object(o.b)(l.a,{value:"resource",mdxType:"TabItem"},Object(o.b)(i.a,{resource:"true",list:[{name:"Bubble Sort",link:"https://www.hackerearth.com/practice/algorithms/sorting/bubble-sort/tutorial"}],mdxType:"Question"})),"### Insertion Sort",Object(o.b)(l.a,{value:"resource",mdxType:"TabItem"},Object(o.b)(i.a,{resource:"true",list:[{name:"Insertion Sort",link:"https://www.hackerearth.com/practice/algorithms/sorting/insertion-sort/tutorial"}],mdxType:"Question"})),Object(o.b)("h3",{id:"selection-sort"},"Selection Sort"),Object(o.b)(l.a,{value:"resource",mdxType:"TabItem"},Object(o.b)(i.a,{resource:"true",list:[{name:"Selection Sort",link:"https://www.hackerearth.com/practice/algorithms/sorting/selection-sort/tutorial"}],mdxType:"Question"})),Object(o.b)("h2",{id:"declaring-your-own-custom-comparison-function-for-sorting-using-stl"},"Declaring your own custom comparison function for sorting using STL"),Object(o.b)("p",null,"So far you have seen sorting applied to primitive data types but what if you have a custom data type declared, can you use the STL sort() method then ? The answer is YES , you can, but you will have to read on to find out how."),Object(o.b)(l.a,{value:"resource",mdxType:"TabItem"},Object(o.b)(i.a,{resource:"true",list:[{name:"Sorting A Vector Of Custom Objects Using Cplusplus Stl",link:"https://www.tutorialspoint.com/Sorting-a-vector-of-custom-objects-using-Cplusplus-STL/"},{name:"Sorting A Vector In C",link:"https://www.geeksforgeeks.org/sorting-a-vector-in-c/"}],mdxType:"Question"})),Object(o.b)("br",null),Object(o.b)(s.a,{defaultValue:"medium",values:[{label:"Medium",value:"medium"}],mdxType:"Tabs"},Object(o.b)(l.a,{value:"medium",mdxType:"TabItem"},Object(o.b)(i.a,{list:[{name:"Inversion Of Array 1587115620",link:"https://practice.geeksforgeeks.org/problems/inversion-of-array-1587115620/1"},{name:"Minimum Swaps",link:"https://practice.geeksforgeeks.org/problems/minimum-swaps/1"}],mdxType:"Question"}))),Object(o.b)("br",null))}b.isMDXComponent=!0}}]);